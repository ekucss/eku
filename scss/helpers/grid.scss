$grid-gap: $gap !default;
$grid-columns: 12 !default;

.grid {
    display: grid;

    &.has-gap {
        grid-gap: $grid-gap;
    }
    
    @for $i from 1 through $grid-columns {
        &.xs-#{$i} {
            grid-template-columns: repeat($i, 1fr);
        }
    }

    @media(min-width: $sm) {
        @for $i from 1 through $grid-columns {
            &.sm-#{$i} {
                grid-template-columns: repeat($i, 1fr);
            }
        }
    }

    @media(min-width: $md) {
        @for $i from 1 through $grid-columns {
            &.md-#{$i} {
                grid-template-columns: repeat($i, 1fr);
            }
        }
    }

    @media(min-width: $bg) {
        @for $i from 1 through $grid-columns {
            &.bg-#{$i} {
                grid-template-columns: repeat($i, 1fr);
            }
        }
    }

    @media(min-width: $xl) {
        @for $i from 1 through $grid-columns {
            &.xl-#{$i} {
                grid-template-columns: repeat($i, 1fr);
            }
        }
    }
}

.grid > .column {
    @for $i from 1 through $grid-columns {
        &.xs-#{$i} {
            grid-column: $i span;
        }
    }

    @media(min-width: $sm) {
        @for $i from 1 through $grid-columns {
            &.sm-#{$i} {
                grid-column: $i span;
            }
        }
    }

    @media(min-width: $md) {
        @for $i from 1 through $grid-columns {
            &.md-#{$i} {
                grid-column: $i span;
            }
        }
    }

    @media(min-width: $bg) {
        @for $i from 1 through $grid-columns {
            &.bg-#{$i} {
                grid-column: $i span;
            }
        }
    }

    @media(min-width: $xl) {
        @for $i from 1 through $grid-columns {
            &.xl-#{$i} {
                grid-column: $i span;
            }
        }
    }
}
